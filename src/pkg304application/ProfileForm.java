/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg304application;
import pkg304application.database.*;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.ListModel;
import javax.swing.SwingUtilities;

/**
 *
 * @author jko
 */
public class ProfileForm extends javax.swing.JFrame {
    
    
    public Boolean editing = false;
    Statement stmt = null;
    ResultSet rs = null;
    public static int searchUserID;
    String queryString;
    
    /**
     * Creates new form ProfileForm
     */
    public ProfileForm() {
            initComponents();
            showProfileInfo();
            showFriendList();
            showGameList();
            showGroupList();
            showReviewList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextField = new javax.swing.JTextArea();
        logoutButton = new javax.swing.JButton();
        ProfileName = new javax.swing.JLabel();
        Friends = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        friendList = new javax.swing.JList<>();
        GroupAndGames = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        groupList = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        gameList = new javax.swing.JList<>();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        libraryButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        deleteFriend = new javax.swing.JButton();
        user = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        editButton.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        editButton.setText("Edit");
        editButton.setAutoscrolls(true);
        editButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        getContentPane().add(editButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, 100, 30));

        descriptionTextField.setColumns(20);
        descriptionTextField.setRows(5);
        jScrollPane1.setViewportView(descriptionTextField);
        descriptionTextField.setEditable(false);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, 550, 200));

        logoutButton.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        logoutButton.setText("Log out");
        logoutButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        logoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutButtonMouseClicked(evt);
            }
        });
        getContentPane().add(logoutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 40, 120, 50));

        ProfileName.setFont(new java.awt.Font("PT Serif Caption", 1, 24)); // NOI18N
        ProfileName.setText("Profile Name:");
        getContentPane().add(ProfileName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));

        Friends.setFont(new java.awt.Font("PT Serif Caption", 1, 24)); // NOI18N
        Friends.setText("Friends:");
        getContentPane().add(Friends, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 170, -1, -1));

        friendList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        friendList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                friendListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(friendList);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 210, 120, 200));

        GroupAndGames.setFont(new java.awt.Font("PT Sans Caption", 1, 14)); // NOI18N

        groupList.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        groupList.setFont(new java.awt.Font("PT Serif Caption", 1, 14)); // NOI18N
        groupList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(groupList);

        GroupAndGames.addTab("Groups", jScrollPane2);

        gameList.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        gameList.setFont(new java.awt.Font("PT Serif Caption", 1, 14)); // NOI18N
        gameList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(gameList);

        GroupAndGames.addTab("Games", jScrollPane4);

        getContentPane().add(GroupAndGames, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, 770, 220));

        searchField.setFont(new java.awt.Font("PT Serif Caption", 0, 14)); // NOI18N
        searchField.setText("   find a user");
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        getContentPane().add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 400, 50));

        searchButton.setFont(new java.awt.Font("PT Serif Caption", 0, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
        });
        getContentPane().add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, 60, 50));

        refreshButton.setFont(new java.awt.Font("PT Serif Caption", 1, 14)); // NOI18N
        refreshButton.setText("Refresh");
        refreshButton.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        refreshButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshButtonMouseClicked(evt);
            }
        });
        getContentPane().add(refreshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 40, 60, 50));

        libraryButton.setText("Go to Library");
        libraryButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                libraryButtonMouseClicked(evt);
            }
        });
        getContentPane().add(libraryButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 720, 260, 80));

        deleteButton.setText("Delete");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 700, 110, 30));

        deleteFriend.setText("Delete");
        deleteFriend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteFriendMouseClicked(evt);
            }
        });
        getContentPane().add(deleteFriend, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 420, -1, -1));

        user.setText("user");
        getContentPane().add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));

        jRadioButton2.setText("game");
        getContentPane().add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, -1, -1));

        jRadioButton3.setText("group");
        getContentPane().add(jRadioButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        if (editing.equals(false)){
          this.descriptionTextField.setEditable(true);
          this.editButton.setText("Save changes");
          editing = true;
        } else {

          if (this.descriptionTextField.getText().length() > 100){
              System.out.println("Description can only be under 100 characters!");
              this.descriptionTextField.setText(" ");
            } else {
              String updateStr = "update Account a set a.description = '" + this.descriptionTextField.getText() + 
                      "' where a.username = '" + MainForm.userName.toString() + "'";
              try {
                  System.out.println(updateStr);
                  stmt.executeUpdate(updateStr);
              } catch (SQLException ex) {
                  Logger.getLogger(ProfileForm.class.getName()).log(Level.SEVERE, null, ex);
              }
              System.out.println("Successfully stored the description");
           }
        
          this.descriptionTextField.setEditable(false);
          this.editButton.setText("Edit");
          editing = false;
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void logoutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutButtonMouseClicked
        // TODO add your handling code here:
        new MainForm().setVisible(true);
        MainForm.userName="";
        this.setVisible(false);
        this.dispose(); 
    }//GEN-LAST:event_logoutButtonMouseClicked

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
        // TODO add your handling code here:
        String name = searchField.getText();
        System.out.println(name);
        queryString = "Select A.userID from Account A where A.userName='" + name + "'";
        try {
            rs = stmt.executeQuery(queryString);
            if (rs.next()){
                searchUserID = rs.getInt("userID");
                System.out.println("finished");
                new SearchUserForm().setVisible(true);
            } else {
                System.out.println("no user exists");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ProfileForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        return;
    }//GEN-LAST:event_searchButtonMouseClicked

    private void friendListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_friendListMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_friendListMouseClicked

    private void refreshButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshButtonMouseClicked
        // TODO add your handling code here:
         /*  this.setVisible(false);
            new ProfileForm().setVisible(true);
        */
            JPanel contentPane = (JPanel) this.getContentPane();
           // friendList.revalidate(); 
            //contentPane.repaint();
            //System.out.println("refreshing");
            this.setVisible(false);
            new ProfileForm().setVisible(true);
    }//GEN-LAST:event_refreshButtonMouseClicked

    private void libraryButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_libraryButtonMouseClicked
        // TODO add your handling code here:
        new GameLibraryForm().setVisible(true);
    }//GEN-LAST:event_libraryButtonMouseClicked

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
        // TODO add your handling code here:
        String insertStr;
        String selected = gameList.getSelectedValue();
        
        try{
            String selectStr = "select * from Game G where G.gName = '" + selected + "'";
            rs = stmt.executeQuery(selectStr);
            rs.next();
            int Gid  = rs.getInt("gameID");
            int currID = MainForm.userID;
            
            insertStr = "delete from OwnsGame where gameID = "+Gid+" and ownerID = "+currID;
            System.out.println(insertStr);
                              
            stmt.executeUpdate(insertStr);                       
        } catch (SQLException ex) {
            Logger.getLogger(GameInfoForm.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
    }//GEN-LAST:event_deleteButtonMouseClicked

    private void deleteFriendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteFriendMouseClicked
        // TODO add your handling code here:
        String insertStr;
        String selected = friendList.getSelectedValue();
        
        try{
            String selectStr = "select * from Account A where A.userName = '" + selected + "'";
            rs = stmt.executeQuery(selectStr);
            rs.next();
            int Uid  = rs.getInt("userID");
            int currID = MainForm.userID;
            
            insertStr = "delete from FriendsWith where userID1 = "+Uid+" and UserID2 = "+currID;                              
            stmt.executeUpdate(insertStr);
            insertStr = "delete from FriendsWith where userID1 = "+currID+" and UserID2 = "+Uid;                              
            stmt.executeUpdate(insertStr);
   
            System.out.println("TEST");
        } catch (SQLException ex) {
            Logger.getLogger(GameInfoForm.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
    }//GEN-LAST:event_deleteFriendMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfileForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProfileForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Friends;
    private javax.swing.JTabbedPane GroupAndGames;
    private javax.swing.JLabel ProfileName;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteFriend;
    private javax.swing.JTextArea descriptionTextField;
    public static javax.swing.JButton editButton;
    private javax.swing.JList<String> friendList;
    private javax.swing.JList<String> gameList;
    private javax.swing.JList<String> groupList;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton libraryButton;
    private javax.swing.JButton logoutButton;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JRadioButton user;
    // End of variables declaration//GEN-END:variables

    private void showProfileInfo() {
        try {
            DatabaseConnection dbc = new DatabaseConnection();
            dbc.init();
            this.setResizable(false); 
            this.ProfileName.setText(MainForm.userName);
            queryString = "select a.description from Account a where a.username = '" +
                    MainForm.userName.toString() + "'";
            System.out.println(queryString);
            stmt= dbc.getMyConnection().createStatement(); 
            rs = stmt.executeQuery(queryString);
            rs.next();
            this.descriptionTextField.setText(rs.getString("description"));
        } catch (SQLException ex) {
            Logger.getLogger(ProfileForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void showFriendList() {
        try {
            String queryString = "Select DISTINCT A.userName from Account A, FriendsWith F where F.userID1=" + MainForm.userID +
                    " and F.userID2=A.userID";
            rs = stmt.executeQuery(queryString);
            DefaultListModel friendListModel = new DefaultListModel();
            while(rs.next()){
                friendListModel.addElement(rs.getString("userName"));
            }
            friendList.setModel(friendListModel);
        } catch (SQLException ex) {
            Logger.getLogger(ProfileForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }

    private void showGameList() {
        
         try {
            String queryStr = "Select DISTINCT G.gName from OwnsGame O, Game G where G.gameID = O.gameID and O.ownerID=" + MainForm.userID;
            rs = stmt.executeQuery(queryStr);
            DefaultListModel gameListModel = new DefaultListModel();
            while (rs.next()){
                gameListModel.addElement(rs.getString("gName"));
            }
            gameList.setModel(gameListModel);
        } catch (SQLException ex) {
            Logger.getLogger(DeveloperForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void showGroupList() {
        return;
    }

    private void showReviewList() {
        return;
    }
    
    
}
