/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg304application;
import pkg304application.database.*;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author jko
 */
public class UserResultForm extends javax.swing.JFrame {

    /**
     * Creates new form UserResultForm
     */
    
    public int thisUserID = ProfileForm.searchUserID;
    ResultSet rs;
    Statement stmt;
    
    public UserResultForm() {
        initComponents();
        showUserInfo();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userID = new javax.swing.JLabel();
        userName = new javax.swing.JLabel();
        description = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        friendsList = new javax.swing.JList<>();
        addFriend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userID.setText("jLabel1");

        userName.setText("jLabel2");

        description.setText("jLabel3");

        friendsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(friendsList);

        addFriend.setText("Add Friend");
        addFriend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addFriendMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userID)
                    .addComponent(description)
                    .addComponent(userName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(addFriend)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(userID)
                        .addGap(18, 18, 18)
                        .addComponent(userName)
                        .addGap(18, 18, 18)
                        .addComponent(description)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(addFriend)
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFriendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFriendMouseClicked
        try {
            // TODO add your handling code here:
            String insertStr = "Insert into FriendsWith(userID1, userID2) values(" + MainForm.userID + "," + thisUserID + ")";
            stmt.executeUpdate(insertStr);
            insertStr = "Insert into FriendsWith(userID1, userID2) values(" + thisUserID + "," + MainForm.userID + ")";
            stmt.executeUpdate(insertStr);
            System.out.println("added to friendlist");
            addFriend.setText("Friends");
            addFriend.setEnabled(false);
        } catch (SQLException ex) {
            Logger.getLogger(UserResultForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_addFriendMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserResultForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserResultForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserResultForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserResultForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserResultForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFriend;
    private javax.swing.JLabel description;
    private javax.swing.JList<String> friendsList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel userID;
    private javax.swing.JLabel userName;
    // End of variables declaration//GEN-END:variables

    private void showUserInfo() {
        try {
            String queryStr = "Select * from Account A where A.userID='" + thisUserID + "'";
            DatabaseConnection dbc = new DatabaseConnection();
            dbc.init();
            stmt = dbc.getMyConnection().createStatement();
            rs = stmt.executeQuery(queryStr);
            rs.next();
            userID.setText(String.valueOf(rs.getInt("userID")));
            userName.setText(rs.getString("userName"));
            description.setText(rs.getString("description"));
            queryStr = "Select * from FriendsWith where userID1=" + MainForm.userID + " and userID2=" + thisUserID;
            System.out.println(queryStr);
            rs = stmt.executeQuery(queryStr);
            if (rs.next()){
                System.out.println("Already friends");
                addFriend.setText("Friends");
                addFriend.setEnabled(false);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(UserResultForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
